August 19, 2020

ok i got it pretty much fully working, i need to add in another batch of tickers

realistically, I am not sure how it is handling overnight data with holes and shit, and perhaps we should add a mean() for all gaps in the data so we just linearize the the step between the holes
solves in roughly 1 minute, not bad but that will get much worse when the data history is expanded and 5+ more tickers are brought into the mix
once the engine is running, we should try to evaluate the accuracy of the analysis and try to feed it a better feature than just price change - i get thats the risk model but perhaps we can affect the model for improved sensitivity
**please suggest some tickers you would like to see in this mix
https://github.com/irvineAlgotrading/gradientdescentrebalancer/blob/master/gradient%20descent%20rebalancer%20v1.1.ipynb

August 30, 2020

Yeah the problem is the afterhours data is sporadic
We kinda need to remap the data
So all the gaps are just the prior price
andy08/30/2020
What do you think?
We basically need to initialize a data stream of empty values
For every minute as far back as the data goes
And then we need to merge the txt file into that data, and for any zero value, we need it to take the prior time step value

(Pdb) print(n)
[1.0658e+05 1.1800e+02 2.0000e+00 0.0000e+00 0.0000e+00 0.0000e+00
 0.0000e+00 0.0000e+00 0.0000e+00 0.0000e+00 0.0000e+00 0.0000e+00
 2.6000e+01 0.0000e+00 0.0000e+00 0.0000e+00 0.0000e+00 5.0000e+00]

(Pdb) print(bins)
[6.0000e+01 1.6060e+04 3.2060e+04 4.8060e+04 6.4060e+04 8.0060e+04
 9.6060e+04 1.1206e+05 1.2806e+05 1.4406e+05 1.6006e+05 1.7606e+05
 1.9206e+05 2.0806e+05 2.2406e+05 2.4006e+05 2.5606e+05 2.7206e+05
 2.8806e+05]

(Pdb) mask.head(5)
timestamp
2020-01-02 04:03:00        NaT
2020-01-02 04:04:00   00:01:00
2020-01-02 04:07:00   00:03:00
2020-01-02 04:14:00   00:07:00
2020-01-02 04:24:00   00:10:00
Name: timestamp, dtype: timedelta64[ns]

